{{define "base"}}
    <!DOCTYPE html>
    <html lang="en">
    <head>
        <!-- Required meta tags -->
        <meta charset="utf-8">
        <meta name="viewport" content="width=device-width, initial-scale=1">

        <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.0.1/dist/css/bootstrap.min.css" rel="stylesheet"
              integrity="sha384-+0n0xVW2eSR5OomGNYDnhzAbDsOXxcvSN1TPprVMTNDbiYZCxYbOOl7+AMvyTG2x"
              crossorigin="anonymous">
        <link rel="stylesheet"
              href="https://cdn.jsdelivr.net/npm/vanillajs-datepicker@1.1.4/dist/css/datepicker-bs4.min.css">
        <link rel="stylesheet" type="text/css" href="https://unpkg.com/notie/dist/notie.min.css">

        <link rel="stylesheet" type="text/css" href="/static/css/styles.css">
        <title>Bookings</title>
    </head>
    <body>

    <nav class="navbar navbar-expand-lg navbar-dark bg-dark">
        <div class="container-fluid">
            <a class="navbar-brand" href="#">Navbar</a>
            <button class="navbar-toggler" type="button" data-bs-toggle="collapse"
                    data-bs-target="#navbarSupportedContent" aria-controls="navbarSupportedContent"
                    aria-expanded="false" aria-label="Toggle navigation">
                <span class="navbar-toggler-icon"></span>
            </button>
            <div class="collapse navbar-collapse" id="navbarSupportedContent">
                <ul class="navbar-nav me-auto mb-2 mb-lg-0">
                    <li class="nav-item">
                        <a class="nav-link active" aria-current="page" href="/">Home</a>
                    </li>
                    <li class="nav-item">
                        <a class="nav-link" href="/about">Acerca de</a>
                    </li>
                    <li class="nav-item dropdown">
                        <a class="nav-link dropdown-toggle" href="#" id="navbarDropdown" role="button"
                           data-bs-toggle="dropdown" aria-expanded="false">
                            Cuartos
                        </a>
                        <ul class="dropdown-menu" aria-labelledby="navbarDropdown">
                            <li><a class="dropdown-item" href="/generals-quarters">Cuartos generales </a></li>
                            <li>
                                <a class="dropdown-item d-flex align-items-center" href="/majors-suite">
                                    <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="orange"
                                         class="bi bi-star-fill" viewBox="0 0 16 16">
                                        <path d="M3.612 15.443c-.386.198-.824-.149-.746-.592l.83-4.73L.173 6.765c-.329-.314-.158-.888.283-.95l4.898-.696L7.538.792c.197-.39.73-.39.927 0l2.184 4.327 4.898.696c.441.062.612.636.282.95l-3.522 3.356.83 4.73c.078.443-.36.79-.746.592L8 13.187l-4.389 2.256z"/>
                                    </svg>
                                    <span class="ms-2">Suite presidencial</span>
                                </a>
                            </li>
                        </ul>
                    </li>
                    <li class="nav-item">
                        <a class="nav-link" href="/search-availability" tabindex="-1" aria-disabled="true">Reservar
                            ahora</a>
                    </li>
                    <li class="nav-item">
                        <a class="nav-link" href="/contact" tabindex="-1" aria-disabled="true">Contacto</a>
                    </li>
                </ul>
            </div>
        </div>
    </nav>

    {{block "content" .}}

    {{end}}

    <div class="row my-footer">
        <div class="col">
            Left
        </div>
        <div class="col">
            Middle
        </div>
        <div class="col">
            Right
        </div>
    </div>

    <script src="https://cdn.jsdelivr.net/npm/@popperjs/core@2.9.2/dist/umd/popper.min.js"
            integrity="sha384-IQsoLXl5PILFhosVNubq5LC7Qb9DXgDA9i+tQ8Zj3iwWAwPtgFTxbJ8NT4GN1R8p"
            crossorigin="anonymous"></script>
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.0.1/dist/js/bootstrap.min.js"
            integrity="sha384-Atwg2Pkwv9vp0ygtn1JAojH0nYbwNJLPhwyoVbhoPwBhjQPR5VtM2+xf0Uwh9KtT"
            crossorigin="anonymous"></script>
    <script src="https://cdn.jsdelivr.net/npm/vanillajs-datepicker@1.1.4/dist/js/datepicker-full.min.js"></script>
    <script src="https://unpkg.com/notie"></script>
    <script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>

    {{block "js" .}}

    {{end}}

    <script>

        let attention = Prompt();

        // Example starter JavaScript for disabling form submissions if there are invalid fields
        (function () {
            'use strict'

            // Fetch all the forms we want to apply custom Bootstrap validation styles to
            var forms = document.querySelectorAll('.needs-validation')

            // Loop over them and prevent submission
            Array.prototype.slice.call(forms)
                .forEach(function (form) {

                    form.addEventListener('submit', function (event) {

                        if (!form.checkValidity()) {
                            event.preventDefault()
                            event.stopPropagation()
                        }

                        form.classList.add('was-validated')
                    }, false)
                })
        })();

        // shows message on screen, types of message: 'error', 'success', 'warning'
        function alert(msg, msgType) {
            notie.alert({
                type: msgType,
                text: msg,
            })
        }

        // shows a modal notification with especific title, message and buttons
        function notifyModal(title, text, icon, confirmButtonText) {
            swal.fire({
                title: title,
                text: text,
                icon: icon,
                confirmButtonText: confirmButtonText,
            })
        }

        // Prompt is our Javascript module for all alerts, notifications, and custom popup dialogs
        function Prompt() {

            let toast = function (c) {

                const {
                    msg = '',
                    icon = 'success',
                    position = 'top-end',
                } = c;

                const Toast = Swal.mixin({
                    toast: true,
                    title: msg,
                    position: position,
                    icon: icon,
                    showConfirmButton: false,
                    timer: 3000,
                    timerProgressBar: true,
                    didOpen: (toast) => {
                        toast.addEventListener('mouseenter', Swal.stopTimer)
                        toast.addEventListener('mouseleave', Swal.resumeTimer)
                    }
                })

                Toast.fire({})
            };

            let success = function (c) {

                const {
                    msg = '',
                    title = '',
                    footer = ''
                } = c;

                Swal.fire({
                    icon: 'success',
                    title: title,
                    text: msg,
                    footer: footer,
                })
            };


            let error = function (c) {

                const {
                    msg = '',
                    title = '',
                    footer = ''
                } = c;

                Swal.fire({
                    icon: 'error',
                    title: title,
                    text: msg,
                    footer: footer,
                })
            };

            async function custom(c) {
                const {
                    msg = '',
                    title = '',
                } = c;

                const {value: result} = await Swal.fire({
                    title: title,
                    html: msg,
                    backdrop: false,
                    focusConfirm: false,
                    showCancelButton: true,
                    willOpen: () => {
                        if (c.willOpen) {
                            c.willOpen();
                        }
                    },
                    preConfirm: () => {
                        return [
                            document.getElementById('start').value,
                            document.getElementById('end').value
                        ]
                    },
                    didOpen: () => {
                        if (c.didOpen) {
                            c.didOpen();
                        }
                    }
                })

                if (result) {
                    if (result.dismiss !== Swal.DismissReason.cancel) {
                        if (c.callback) {
                            c.callback(result);
                        } else {
                            c.callback(false);
                        }
                    } else {
                        c.callback(false);
                    }
                }
            }

            return {
                toast: toast,
                success: success,
                error: error,
                custom: custom
            };
        }

    </script>
    </body>
    </html>
{{end}}